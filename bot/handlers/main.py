from pyrogram import Client, Filters

from core.api import GameAPI
from core import keyboards as kb
from core import texts


@Client.on_message(Filters.command('start'))
def start(cli, m):
    tg_id = m.from_user.id

    # –î–µ–ª–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ —é–∑–µ—Ä
    response = GameAPI.check_user(tg_id)
    if response.status_code == 200:
        return cli.send_photo(m.chat.id, caption=texts.home_text, photo='media/hello.jpg', reply_markup=kb.menu)

    if response.status_code == 404:
        GameAPI.registration_user(tg_id=m.from_user.id, source='none')
        m.reply(texts.onboarding, reply_markup=kb.onboarding)


# @Client.on_message(Filters.regex(r'^üá¨üáß English$|^üá∑üá∫ –†—É—Å—Å–∫–∏–π$'))
# def select_lang(cli, m):
#     user_lang = 'en' if m.text == 'üá¨üáß English' else 'ru'
#     GameAPI.registration_user(tg_id=m.from_user.id, source='none')
#     m.reply(texts.license_terms, reply_markup=kb.accept_license_terms)


# @Client.on_message(Filters.regex(r'^‚úÖ –ü—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è$'))
# def accept_license_terms(cli, m):
#     GameAPI.registration_user(tg_id=m.from_user.id, source='none')
#     cli.send_photo(m.chat.id, caption=texts.home_text, photo='media/hello.jpg', reply_markup=kb.menu)


@Client.on_message(Filters.regex(r'^‚úÖ  –ü—Ä–æ–π—Ç–∏ –æ–±—É—á–µ–Ω–∏–µ$'))
def accept_license_terms(cli, m):
    cli.send_photo(m.chat.id, caption=texts.tutor_1, photo='media/tutor_1.jpg', reply_markup=kb.tutor_1)


@Client.on_message(Filters.regex(r'^‚è≠ C–ª–µ–¥—É—é—â–∏–π —à–∞–≥$'))
def tutor1_kb(cli, m):
    m.reply(texts.tutor_2, reply_markup=kb.tutor_2)


@Client.on_message(Filters.regex(r'^‚úîÔ∏è –ü–æ–Ω—è—Ç–Ω–æ, —Å–ø–∞—Å–∏–±–æ!$'))
def tutor2_kb(cli, m):
    m.reply(texts.finish_tutor)
    cli.send_photo(m.chat.id, caption=texts.home_text, photo='media/hello.jpg', reply_markup=kb.menu)


@Client.on_message(Filters.regex(r'^üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é$'))
def main_menu(cli, m):
    cli.send_photo(m.chat.id, caption=texts.home_text, photo='media/hello.jpg', reply_markup=kb.menu)


@Client.on_callback_query(Filters.callback_data('close'))
def close_bot_window(cli, cb):
    try:
        cb.message.delete()
    except:
        pass


# @Client.on_message(Filters.regex(r'^ü§ù –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞$'))
# def affiliate_kb(cli, m):


@Client.on_message(Filters.regex(r'^‚ùì –ü–æ–º–æ—â—å$'))
def help_kb(cli, m):
    m.reply('–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º', reply_markup=kb.support)