from pyrogram import Client, Filters
from core.services import game_dict, games
from core import keyboards as kb
from core.api import GameAPI
import re
import urllib


@Client.on_message(Filters.regex(r'^üé∞ –ò–≥—Ä—ã$'))
def games_list(cli, m):
    cli.send_photo(m.chat.id, photo='media/games.jpg', caption='–ù–∞–∂–∏–º–∞–π –Ω–∞ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–µ—é—Å—è –∏–≥—Ä—É', reply_markup=kb.games)


@Client.on_message(Filters.regex(r'^–ò–≥—Ä–∞—Ç—å\s-\s'))
def get_game(cli, m):

    response = re.search(r'–ò–≥—Ä–∞—Ç—å\s-\s..?\s(?P<game_title>.*)', m.text)

    game_title = response.group('game_title')

    game_id = game_dict[game_title]['id']

    txt = f'**{game_title}**\n\n–ò–≥—Ä–∞–π—Ç–µ –Ω–∞ GamblingTokens –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–µ–º–æ-—Ä–µ–∂–∏–º!'
    cli.send_photo(m.chat.id, photo=f'{game_dict[game_title]["image"]}', caption=txt, reply_markup=kb.select_type_game(game_id))


@Client.on_callback_query(Filters.create(lambda _, cb: cb.data.startswith('play')))
def select_type_game(cli, cb):
    tg_id = cb.from_user.id
    data = cb.data.split('-')
    type_game = data[1]
    game_id = int(data[2])
    game_title = games[game_id]
    game = GameAPI.get_game_url(game_id, type_game, tg_id)
    if type_game == 'real':
        if game:
            if game['url']:
                game_url = urllib.parse.quote(game['url'], safe='https://chcplay.net?p=')
                return cb.message.edit('‚úÖ –í–∞—à–∞ –∏–≥—Ä–∞ –≥–æ—Ç–æ–≤–∞!', reply_markup=kb.play_game(game_title, game_url))

            if game['err_code'] == 1:  # –ù–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ —Å—á—ë—Ç—É
                cli.answer_callback_query(cb.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ Gamblings Token –¥–ª—è –∏–≥—Ä—ã. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å',
                                          show_alert=True)
                return cb.message.reply('TODO:: —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ')

            if game['err_code'] == 2:  # –ù–µ –∑–∞–∫—Ä—ã—Ç–∞ —Å–µ—Å—Å–∏—è
                cli.answer_callback_query(cb.id,
                                          '–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–µ—Å—Å–∏—è –∏–≥—Ä—ã –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â—É—é –∏–≥—Ä—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.',
                                          show_alert=True)
        else:
            cli.answer_callback_query(cb.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')

    if type_game == 'demo':

        if game:
            if game['url']:
                game_url = urllib.parse.quote(game['url'], safe='https://chcplay.net?p=')
                return cb.message.edit('‚úÖ –í–∞—à–∞ –∏–≥—Ä–∞ –≥–æ—Ç–æ–≤–∞!', reply_markup=kb.play_game(game_title, game_url))

            if game['err_code'] == 2:  # –ù–µ –∑–∞–∫—Ä—ã—Ç–∞ —Å–µ—Å—Å–∏—è
                cli.answer_callback_query(cb.id,
                                          '–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–µ—Å—Å–∏—è –∏–≥—Ä—ã –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â—É—é –∏–≥—Ä—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.',
                                          show_alert=True)